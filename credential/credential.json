{
    "openapi":"3.0.0",
    "info":{
       "title":"Credentials service API",
       "description":"  <details><summary>Overview</summary>\n<p>The Credentials service is a NetApp Cloud Manager service that provides a secure way to manage\nand encrypt credentials and sensitive data. The consumers of the service are both external users and internal services that with the\nhave &quot;credentials:internal&quot; scope.</p>\n<p>The service manages three types of credentials:</p>\n<ul>\n<li>generic</li>\n<li>AWS Amazon Resource Name (AWS ARN)</li>\n<li>Azure (Azure service principal)</li>\n</ul>\n<p>In addition to the generic credentials, that can be any type of data, the service also provides dedicated endpoints for the following scenarios:</p>\n<ul>\n<li>\n<p>ARN credentials are considered best practice for managing third-party permissions. The Credentials service manages<br />\ncustomer ARNs and can provide temporary credentials for users or other services.<br />\nARN credentials are not considered sensitive, so ARN data is not encrypted in a MongoDB database.</p>\n<p>When creating ARN credentials, the service automatically provides the credentials as type &quot;aws_assume_role&quot;.<br />\nFor more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">AWS ARN Documentation</a>.</p>\n</li>\n<li>\n<p>Azure service principal credentials manage and encrypt the service principal data (which is considered sensitive) and can provide a temporary token for<br />\nusers or internal services.</p>\n<p>When creating Azure service principal credentials, the service automatically provides the credentials as type &quot;azure_service_principal&quot;.<br />\nFor more information, see <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals\">Azure Service Principal Documentation</a>.</p>\n</li>\n</ul>\n</details>\n<hr />\n   <details>\n<summary>REST implementation</summary>\n<h3>HTTP methods</h3>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>POST</code></td>\n<td>Create an object instance</td>\n</tr>\n<tr>\n<td><code>GET</code></td>\n<td>Retrieve an object instance or collection</td>\n</tr>\n<tr>\n<td><code>PUT</code></td>\n<td>Update an existing object's specified properties</td>\n</tr>\n<tr>\n<td><code>DELETE</code></td>\n<td>Remove an existing object</td>\n</tr>\n</tbody>\n</table>\n<h3>Request headers</h3>\n<table>\n<thead>\n<tr>\n<th>Request Header</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Authorization</code></td>\n<td>Required. Contains a JWT access token</td>\n</tr>\n<tr>\n<td><code>x-simulator</code></td>\n<td>Used to determine whether credentials are simulated or real</td>\n</tr>\n</tbody>\n</table>\n<h3>Query parameters</h3>\n<p>You can use query parameters with endpoints in the following components:</p>\n<table>\n<thead>\n<tr>\n<th>Query Parameter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>credentialsType</code></td>\n<td>Used for fetching list of credentials by a specific credentials type</td>\n</tr>\n<tr>\n<td><code>isGov</code></td>\n<td>Used to determine whether the service principal in located in AWS GovCloud (US) location</td>\n</tr>\n<tr>\n<td><code>getDecrypted</code></td>\n<td>Used to determine whether to return the decrypted credentials or leave it as undefined with default value false</td>\n</tr>\n</tbody>\n</table>\n<h3>Response headers</h3>\n<p>This API uses the standard HTTP response headers common with all Cloud Manager service APIs. See <a href=\"https://docs.netapp.com/us-en/cloud-manager-automation/platform/rest_implementation.html\">REST implementation</a> for more information.</p>\n<h3>HTTP status codes</h3>\n<table>\n<thead>\n<tr>\n<th>HTTP Status Code</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>200</code></td>\n<td>OK: Returned for successful operation completion</td>\n</tr>\n<tr>\n<td><code>400</code></td>\n<td>Bad Request: Returned if the input is malformed and could not be parsed</td>\n</tr>\n<tr>\n<td><code>401</code></td>\n<td>Unauthorized: Returned if user authentication failed or the token has expired</td>\n</tr>\n<tr>\n<td><code>403</code></td>\n<td>Forbidden: Returned for authorization errors depending on the resource and token</td>\n</tr>\n<tr>\n<td><code>404</code></td>\n<td>Not Found: Returned if the requested resource could not be found</td>\n</tr>\n<tr>\n<td><code>500</code></td>\n<td>Processing Error: Returned if an error occurs on the server while processing the API call</td>\n</tr>\n</tbody>\n</table>\n</details>\n<hr />\n   <details>\n<summary>Error handling</summary>\n<p>There are three processes involved with error handling and processing:</p>\n<ul>\n<li>The error is logged for supportability</li>\n<li>The error is returned to the caller for specific handling</li>\n<li>The database connection is rolled back</li>\n</ul>\n</details>\n<hr />\n   <details>\n<summary>cURL examples</summary>\n<h3>Retrieve generic credentials</h3>\n<p>The following cURL example retrieves generic credentials by using a specified account ID and credentials ID.</p>\n<pre><code class=\"language-bash\">curl -X GET &quot;https://cloudmanager.cloud.netapp.com/credentials/account/&lt;accountId&gt;/credentials/&lt;credentialsId&gt;\n&quot; -H  &quot;accept: application/json&quot; -H  &quot;authorization: &lt;user token&gt;&quot;\n</code></pre>\n</details>\n<hr />\n   <br><br>",
       "version":"1.0",
       "contact":{
          
       }
    },
    "tags":[
       {
          "name":"Generic",
          "description":"<details>\n<summary>Overview</summary>\n<fieldset>\nThe generic endpoints manage and encrypt any type of credentials.\n<p>You can perform the following actions with the generic endpoints:</p>\n<ul>\n<li>Create generic credentials</li>\n<li>Retrieve generic credentials</li>\n<li>Update generic credentials</li>\n<li>Delete generic credentials</li>\n<li>Retrieve generic credentials by credentials ID</li>\n</ul>\n</fieldset>\n</details>\n"
       },
       {
          "name":"AWS",
          "description":"<details>\n<summary>Overview</summary>\n<fieldset>\nThe AWS endpoints manage Amazon Resource Name (ARN) credentials.\n<p>You can perform the following actions with the AWS endpoints:</p>\n<ul>\n<li>Create ARN credentials</li>\n<li>Update ARN credentials</li>\n<li>Retrieve ARN credentials</li>\n</ul>\n</fieldset>\n</details>\n"
       },
       {
          "name":"Azure",
          "description":"<details>\n<summary>Overview</summary>\n<fieldset>\nThe Azure endpoints manage and encrypt Microsoft Azure service principal credentials. \n<p>You can perform the following actions with the Azure endpoints:</p>\n<ul>\n<li>Create service principal credentials</li>\n<li>Update service principal credentials</li>\n<li>Retrieve service principal credentials</li>\n<li>Generate a token from a credentials ID</li>\n<li>Generate a token from Azure credentials</li>\n</ul>\n</fieldset>\n</details>\n"
       }
    ],
    "servers":[
       {
          "url":"/credentials"
       }
    ],
    "components":{
       "securitySchemes":{
          "bearer":{
             "scheme":"bearer",
             "bearerFormat":"JWT",
             "type":"http"
          }
       },
       "schemas":{
          "ServicePrincipalRequest":{
             "type":"object",
             "properties":{
                "tenantId":{
                   "type":"string"
                },
                "clientId":{
                   "type":"string"
                },
                "clientSecret":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                }
             },
             "required":[
                "tenantId",
                "clientId",
                "clientSecret",
                "name"
             ]
          },
          "saveCredentialsResponse":{
             "type":"object",
             "properties":{
                "credentialsId":{
                   "type":"string",
                   "readOnly":true
                },
                "credentialsType":{
                   "type":"string",
                   "readOnly":true
                },
                "extra":{
                   "type":"object",
                   "readOnly":true
                },
                "isSimulated":{
                   "type":"boolean",
                   "readOnly":true
                }
             },
             "required":[
                "credentialsId",
                "credentialsType",
                "extra",
                "isSimulated"
             ]
          },
          "UpdateServicePrincipalRequest":{
             "type":"object",
             "properties":{
                "tenantId":{
                   "type":"string"
                },
                "clientId":{
                   "type":"string"
                },
                "clientSecret":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                }
             },
             "required":[
                "tenantId",
                "clientId",
                "clientSecret",
                "name"
             ]
          },
          "GetServicePrincipalResponse":{
             "type":"object",
             "properties":{
                "credentialsId":{
                   "type":"string"
                },
                "clientId":{
                   "type":"string"
                },
                "tenantId":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                },
                "credentialsType":{
                   "type":"string"
                },
                "isSimulated":{
                   "type":"boolean"
                }
             },
             "required":[
                "credentialsId",
                "clientId",
                "tenantId",
                "name",
                "credentialsType",
                "isSimulated"
             ]
          },
          "AzureTokenResponse":{
             "type":"object",
             "properties":{
                "token":{
                   "type":"string"
                }
             },
             "required":[
                "token"
             ]
          },
          "GenerateAzureCredentialsRequest":{
             "type":"object",
             "properties":{
                "tenantId":{
                   "type":"string"
                },
                "clientId":{
                   "type":"string"
                },
                "clientSecret":{
                   "type":"string"
                }
             },
             "required":[
                "tenantId",
                "clientId",
                "clientSecret"
             ]
          },
          "SaveCredentialsRequest":{
             "type":"object",
             "properties":{
                "credentials":{
                   "type":"object"
                },
                "credentialsType":{
                   "type":"string"
                },
                "extra":{
                   "type":"object"
                }
             },
             "required":[
                "credentials",
                "credentialsType"
             ]
          },
          "UpdateCredentialsRequest":{
             "type":"object",
             "properties":{
                "credentials":{
                   "type":"object"
                },
                "extra":{
                   "type":"object"
                }
             }
          },
          "CredentialsItemResponse":{
             "type":"object",
             "properties":{
                "credentialsId":{
                   "type":"string"
                },
                "credentialsType":{
                   "type":"string"
                },
                "extra":{
                   "type":"object"
                },
                "credentials":{
                   "type":"object"
                },
                "isSimulated":{
                   "type":"boolean"
                }
             },
             "required":[
                "credentialsId",
                "credentialsType",
                "extra",
                "credentials",
                "isSimulated"
             ]
          },
          "AssumeRoleRequest":{
             "type":"object",
             "properties":{
                "arn":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                },
                "externalId":{
                   "type":"string"
                }
             },
             "required":[
                "arn",
                "name"
             ]
          },
          "UpdateAssumeRoleRequest":{
             "type":"object",
             "properties":{
                "arn":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                },
                "externalId":{
                   "type":"object"
                }
             }
          },
          "GetAssumeRoleResponse":{
             "type":"object",
             "properties":{
                "credentialsId":{
                   "type":"string"
                },
                "arn":{
                   "type":"string"
                },
                "externalId":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                },
                "credentialsType":{
                   "type":"string"
                },
                "isSimulated":{
                   "type":"boolean"
                }
             },
             "required":[
                "credentialsId",
                "arn",
                "name",
                "credentialsType",
                "isSimulated"
             ]
          }
       }
    },
    "paths":{
       "/accounts/{accountPublicId}/azure/service-principal":{
          "post":{
             "operationId":"AzureController_addServicePrincipalCredentials",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Creates new ARN credentials for a specified account public ID.\n  </br>\n    <p><strong>Token usage:</strong></span> Cloud Manager user token.</p>",
             "parameters":[
                {
                   "name":"accountPublicId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"isGov",
                   "required":false,
                   "in":"query",
                   "description":"Is gov location credentials",
                   "schema":{
                      "type":"boolean"
                   }
                },
                {
                   "name":"x-simulator",
                   "in":"header",
                   "schema":{
                      "enum":[
                         "true",
                         "false"
                      ],
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/ServicePrincipalRequest"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"Successful stored service principal credentials",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/saveCredentialsResponse"
                         }
                      }
                   }
                },
                "404":{
                   "description":"Account not found"
                }
             },
             "tags":[
                "Azure"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          }
       },
       "/accounts/{accountPublicId}/azure/service-principal/{credentialsId}":{
          "patch":{
             "operationId":"AzureController_updateServicePrincipalCredentials",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Updates existing credentials by specified account public ID.\n  </br>\n    <p><strong>Token usage:</strong></span> Cloud Manager user token.</p>",
             "parameters":[
                {
                   "name":"accountPublicId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"credentialsId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/UpdateServicePrincipalRequest"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"Successful updated service principal credentials",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/saveCredentialsResponse"
                         }
                      }
                   }
                },
                "404":{
                   "description":"Credentials not found"
                }
             },
             "tags":[
                "Azure"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          },
          "get":{
             "operationId":"AzureController_getCredentialsById",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Retrieves an existing service principal by specified account public ID.\n  </br>\n    <p><strong>Token usage:</strong></span> Both a Cloud Manager user token and service token. The service token needs to include the following scopes: credentials:internal. Pass the user token or service token in the Authorization request header.</p>",
             "parameters":[
                {
                   "name":"accountPublicId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"credentialsId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful fetched service principal credentials",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/GetServicePrincipalResponse"
                         }
                      }
                   }
                },
                "404":{
                   "description":"Credentials not found"
                }
             },
             "tags":[
                "Azure"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          }
       },
       "/accounts/{accountPublicId}/azure/service-principal/{credentialsId}/generate-token":{
          "get":{
             "operationId":"AzureController_generateTokenFromId",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Generates an Azure token by using existing service principal credentials.\n  </br>\n    <p><strong>Token usage:</strong></span> Both a Cloud Manager user token and service token. The service token needs to include the following scopes: credentials:internal. Pass the user token or service token in the Authorization request header.</p>",
             "parameters":[
                {
                   "name":"accountPublicId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"credentialsId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful fetched generated token",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/AzureTokenResponse"
                         }
                      }
                   }
                },
                "404":{
                   "description":"Credentials not found"
                }
             },
             "tags":[
                "Azure"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          }
       },
       "/azure/generate-token":{
          "post":{
             "operationId":"AzureController_generateAzureToken",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Generates an Azure token by using service principal credentials..\n  </br>\n    <p><strong>Token usage:</strong></span> Both a Cloud Manager user token and service token. The service token needs to include the following scopes: credentials:internal. Pass the user token or service token in the Authorization request header.</p>",
             "parameters":[
                {
                   "name":"x-simulator",
                   "in":"header",
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/GenerateAzureCredentialsRequest"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"Successful fetched generated token",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/AzureTokenResponse"
                         }
                      }
                   }
                }
             },
             "tags":[
                "Azure"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          }
       },
       "/accounts/{accountPublicId}/credentials":{
          "post":{
             "operationId":"GenericController_addGenericCredentials",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Creates and encrypts new credentials for a specified account public ID.\n  </br>\n    <p><strong>Token usage:</strong></span> Both a Cloud Manager user token and service token. The service token needs to include the following scopes: credentials:internal. Pass the user token or service token in the Authorization request header.</p>",
             "parameters":[
                {
                   "name":"accountPublicId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-simulator",
                   "in":"header",
                   "schema":{
                      "enum":[
                         "true",
                         "false"
                      ],
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/SaveCredentialsRequest"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"Successful stored generic credentials",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/saveCredentialsResponse"
                         }
                      }
                   }
                },
                "404":{
                   "description":"Account not found"
                }
             },
             "tags":[
                "Generic"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          },
          "get":{
             "operationId":"GenericController_getCredentialsByType",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Retrieves a list of generic credentials by credentials type with a specified account public ID.\n  </br>\n    <p><strong>Token usage:</strong></span> Both a Cloud Manager user token and service token. The service token needs to include the following scopes: credentials:internal. Pass the user token or service token in the Authorization request header.</p>",
             "parameters":[
                {
                   "name":"accountPublicId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"credentialsType",
                   "required":true,
                   "in":"query",
                   "description":"The credentials type",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-simulator",
                   "in":"header",
                   "schema":{
                      "enum":[
                         "true",
                         "false"
                      ],
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"List of credentials",
                   "content":{
                      "application/json":{
                         "schema":{
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/CredentialsItemResponse"
                            }
                         }
                      }
                   }
                }
             },
             "tags":[
                "Generic"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          }
       },
       "/accounts/{accountPublicId}/credentials/{credentialsId}":{
          "patch":{
             "operationId":"GenericController_updateGenericCredentials",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Updates existing generic credentials.\n  </br>\n    <p><strong>Token usage:</strong></span> Both a Cloud Manager user token and service token. The service token needs to include the following scopes: credentials:internal. Pass the user token or service token in the Authorization request header.</p>",
             "parameters":[
                {
                   "name":"accountPublicId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"credentialsId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/UpdateCredentialsRequest"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"Successful updated generic credentials",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/saveCredentialsResponse"
                         }
                      }
                   }
                },
                "404":{
                   "description":"Credentials not found"
                }
             },
             "tags":[
                "Generic"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          },
          "delete":{
             "operationId":"GenericController_deleteCredentials",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Deletes generic credentials.\n  </br>\n    <p><strong>Token usage:</strong></span> Both a Cloud Manager user token and service token. The service token needs to include the following scopes: credentials:internal. Pass the user token or service token in the Authorization request header.</p>",
             "parameters":[
                {
                   "name":"accountPublicId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"credentialsId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful deleted generic credentials return OK",
                   "content":{
                      "application/json":{
                         "schema":{
                            "type":"string"
                         }
                      }
                   }
                },
                "404":{
                   "description":"Credentials not found"
                }
             },
             "tags":[
                "Generic"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          },
          "get":{
             "operationId":"GenericController_getCredentialsById",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Retrieves specific generic credentials by account public ID and credentials ID.\n  </br>\n    <p><strong>Token usage:</strong></span> Both a Cloud Manager user token and service token. The service token needs to include the following scopes: credentials:internal. Pass the user token or service token in the Authorization request header.</p>",
             "parameters":[
                {
                   "name":"accountPublicId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"credentialsId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"getDecrypted",
                   "required":false,
                   "in":"query",
                   "description":"Get decrypted will determine if to return the decrypted credentials or leave it undefined default value false",
                   "schema":{
                      "type":"boolean"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful fetched generic credentials",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CredentialsItemResponse"
                         }
                      }
                   }
                },
                "404":{
                   "description":"Credentials not found"
                }
             },
             "tags":[
                "Generic"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          }
       },
       "/accounts/{accountPublicId}/aws/assume-role":{
          "post":{
             "operationId":"AwsController_addAwsAssumeRoleCredentials",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Creates new ARN credentials for a specified account.\n  </br>\n    <p><strong>Token usage:</strong></span> Cloud Manager user token.</p>",
             "parameters":[
                {
                   "name":"accountPublicId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"isGov",
                   "required":true,
                   "in":"query",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-simulator",
                   "in":"header",
                   "schema":{
                      "enum":[
                         "true",
                         "false"
                      ],
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/AssumeRoleRequest"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"Successful stored ARN credentials",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/saveCredentialsResponse"
                         }
                      }
                   }
                },
                "404":{
                   "description":"Account not found"
                }
             },
             "tags":[
                "AWS"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          }
       },
       "/accounts/{accountPublicId}/aws/assume-role/{credentialsId}":{
          "patch":{
             "operationId":"AwsController_updateAwsAssumeRoleCredentials",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Updates existing credentials by a specified account public ID.\n  </br>\n    <p><strong>Token usage:</strong></span> Cloud Manager user token.</p>",
             "parameters":[
                {
                   "name":"accountPublicId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"credentialsId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/UpdateAssumeRoleRequest"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"Successful updated ARN credentials",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/saveCredentialsResponse"
                         }
                      }
                   }
                },
                "404":{
                   "description":"Credentials not found"
                }
             },
             "tags":[
                "AWS"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          },
          "get":{
             "operationId":"AwsController_getCredentialsById",
             "x-doc":{
                "title":" ",
                "category":" ",
                "filename":" "
             },
             "summary":"",
             "description":"Retrieves existing ARN credentials by a specified account public ID.\n  </br>\n    <p><strong>Token usage:</strong></span> Both a Cloud Manager user token and service token. The service token needs to include the following scopes: credentials:internal. Pass the user token or service token in the Authorization request header.</p>",
             "parameters":[
                {
                   "name":"accountPublicId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"credentialsId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful fetched ARN credentials",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/GetAssumeRoleResponse"
                         }
                      }
                   }
                },
                "404":{
                   "description":"Credentials not found"
                }
             },
             "tags":[
                "AWS"
             ],
             "security":[
                {
                   "bearer":[
                      
                   ]
                }
             ]
          }
       }
    }
 }