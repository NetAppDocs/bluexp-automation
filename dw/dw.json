{
    "swagger": "2.0",
    "info": {
        "title": "Digital Wallet service REST API reference",
        "description": "  <details>\n<summary>Overview</span></summary>\n<p>The Digital Wallet (DW) service manages licenses for Cloud Volumes ONTAP and subscriptions to other Cloud Manager platform services.</p>\n<p>Each license or subscription that is managed by the DW service has a resource identifier in the Tenancy service that associates it with an account.</p>\n<p>You can view and manage procured licenses and subscriptions by using the Cloud Manager UI in the Digital Wallet service drawer
and through the Digital Wallet REST API endpoints.</p>\n<p>Each license contains the following information to monitor the expiration and capacity usage of licenses in an account:</p>\n<ul>\n<li>License serial number (such as 481000485)</li>\n<li>License type/service (such as BACKUP)</li>\n<li>Permitted/Entitled capacity (TB)</li>\n<li>Expiration date</li>\n</ul>\n<p>Each subscription contains the following information to monitor the expiration and capacity subscriptions in an account
(a subscription can be associated with more than one account):</p>\n<ul>\n<li>Subscription number (subscription ID)</li>\n<li>Permitted/entitled capacity (TiB)</li>\n<li>Currently used (or consumed) capacity (TiB)</li>\n<li>Expiration date</li>\n</ul>\n<p>You can manage the following types of licenses in the Digital Wallet service:</p>\n<ul>\n<li><code>Node</code>: Each node has a unique serial number</li>\n<li><code>Capacity</code>: Comes with multiple packages (Professional, Essential, Freemium (500 GB))</li>\n<li><code>Data services</code>: Used for data management services (Backup &amp; Restore, Compliance (Data Sense), and Tiering)</li>\n</ul>\n<p>There are two components defined within the Digital Wallet service:</p>\n<ul>\n<li>license</li>\n<li>subscription</li>\n</ul>\n<p>All Digital Wallet service API calls are short lived and run synchronously.</p>
<p>Asynchronous processing and internal process tracking are not supported.</p>\n</details>\n<hr />\n   <details>\n<summary>REST implementation</summary>\n<h3>HTTP methods</h3>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>POST</code></td>\n<td>Create an object instance</td>\n</tr>\n<tr>\n<td><code>GET</code></td>\n<td>Retrieve an object instance or collection</td>\n</tr>\n<tr>\n<td><code>PATCH</code></td>\n<td>Update an existing object</td>\n</tr>\n<tr>\n<td><code>DELETE</code></td>\n<td>Remove an existing object</td>\n</tr>\n</tbody>\n</table>\n<h3>Request headers</h3>\n<table>\n<thead>\n<tr>\n<th>Request Header</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Authorization</code></td>\n<td>Contains the JWT access token and is required</td>\n</tr>\n<tr>\n<td><code>X-Service-Request-Id</code></td>\n<td>Used to tag a request with application-specific keys for improved supportability</td>\n</tr>\n</tbody>\n</table>\n<h3>Query parameters</h3>\n<p>You can use query parameters with endpoints in the following components:</p>\n<table>\n<thead>\n<tr>\n<th>Component</th>\n<th>Query Parameter</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>License</code></td>\n<td>accountId</br>serialNumber</br>resourceId</br>licenseType</br>service</br>group</br>includeSummaryInfo (boolean)</td>\n</tr>\n<tr>\n<td><code>Subscription</code></td>\n<td>subscriptionId</br>subscriptionType</td>\n</tr>\n</tbody>\n</table>\n<h3>Response headers</h3>\n<p>This API uses the standard HTTP response headers common with all Cloud Manager APIs.
See <a href=\"https://docs.netapp.com/us-en/cloud-manager-automation/platform/rest_implementation.html\">REST implementation</a> for more information.</p>\n<h3>HTTP status codes</h3>\n<table>\n<thead>\n<tr>\n<th>HTTP Status Code</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>200</code></td>\n<td>OK: Returned for successful operation completion</td>\n</tr>\n<tr>\n<td><code>400</code></td>\n<td>Bad Request: Returned if the input is malformed and could not be parsed</td>\n</tr>\n<tr>\n<td><code>401</code></td>\n<td>Unauthorized: Returned if user authentication failed or the token has expired</td>\n</tr>\n<tr>\n<td><code>403</code></td>\n<td>Forbidden: Returned for authorization errors depending on the resource and token</td>\n</tr>\n<tr>\n<td><code>404</code></td>\n<td>Not Found: Returned if the requested resource could not be found</td>\n</tr>\n<tr>\n<td><code>405</code></td>\n<td>Method Not Allowed: Returned if the HTTP request method is not supported for a requested resource</td>\n</tr>\n<tr>\n<td><code>500</code></td>\n<td>Processing Error: Returned if an error occurs on the server while processing the API call</td>\n</tr>\n</tbody>\n</table>\n</details>\n<hr />\n   <details>\n<summary>Error handling</summary>\n<p>There are three processes involved with error handling and processing.</p>\n<ul>\n<li>The error is logged for supportability</li>\n<li>The error is also returned to the caller for any specific handling</li>\n<li>The database connection is rolled back</li>\n</ul>\n</details>\n<hr />\n   <details>\n<summary>cURL examples</summary>\n<h3>Retrieve licenses</h3>\n<p>This example retrieves all the licenses associated with a specified account.</p>\n<pre><code class=\"language-bash\">curl -X GET &quot;https://cloudmanager.cloud.netapp.com/license/licenses?includeSummaryInfo=true&quot; -H  &quot;accept: application/json&quot; -H  &quot;authorization: &lt;user token&gt;&quot;\n</code></pre>\n</details>\n<hr />\n   <details>\n<summary>Frequently asked questions</summary>\n<p><strong>What\u00e2\u20ac\u2122s the difference between user token and service token and why do we need two types of token authorization ?</strong></p>\n<p>A user token is used for communication between a user (or the UI) and the Cloud Manager REST APIs,
whereas the service token is used for communication between two services (machine-to-machine interaction) in the Cloud Manager platform.
The type of token required to invoke an API is documented in the description of each endpoint.</p>\n<p><strong>What is a resource ID ?</strong></p>\n<p>A resource ID is an internal identifier to denote a resource in the Cloud Manager platform. For example, a resource ID such as <code>license-481000495-6897991f-f83f-41c1-b151-eb62073e57be</code> denotes a license resource,
a resource ID such as <code>VsaWorkingEnvironment-XXXX</code> denotes a Cloud Volumes ONTAP instance.</p>\n<p><strong>What\u00e2\u20ac\u2122s the use-case of <code>X-Service-Request-Id</code> ?</strong></p>\n<p><code>X-Service-Request-Id</code> is an optional parameter and can be passed to the cloud Manager platform APIs to identify the origin of the request.
It is used for tagging the API call with a specific ID for logging and better supportability.</p>\n<p><strong>What does the parameter <code>includeSummaryInfo</code> mean in a GET license API call ?</strong></p>\n<p>The <code>includeSummaryInfo</code> parameter contains various pieces of additonal information associated with a license
relating to its expiration and capacity usage. By default the summary information is not included in the API response.
You must pass the parameter explicitly to retrieve this information.</p>\n<p><strong>What does the parameter <code>group</code> mean in a GET license API call ?</strong></p>\n<p><code>group</code> is the logical grouping of the various license types. Groups can be <code>Data Services</code> or <code>CVO</code>.
The <code>Data Services</code> group includes <code>Cloud Backup</code>, <code>Cloud Data Sense</code> and <code>Cloud Tiering</code> services.</p>\n</details>\n   <br><br>",
        "version": "1.0.0"
    },
    "definitions": {
        "def-0": {
            "title": "Authorization",
            "type": "object",
            "properties": {
                "authorization": {
                    "description": "Authorization JWT Service Token",
                    "type": "string"
                },
                "X-Service-Request-Id": {
                    "description": "Request identifier",
                    "type": "string"
                }
            },
            "required": [
                "authorization"
            ]
        },
        "def-1": {
            "title": "AuthorizationUser",
            "type": "object",
            "properties": {
                "authorization": {
                    "description": "Authorization JWT User Token",
                    "type": "string"
                },
                "X-Service-Request-Id": {
                    "description": "Request identifier",
                    "type": "string"
                }
            },
            "required": [
                "authorization"
            ]
        },
        "def-2": {
            "title": "Error",
            "type": "object",
            "description": "Error response",
            "properties": {
                "errorCode": {
                    "description": "error code",
                    "type": "string"
                },
                "error": {
                    "description": "Error code/category",
                    "type": "string"
                },
                "message": {
                    "description": "Error description message",
                    "type": "string"
                }
            }
        }
    },
    "paths": {
        "/license/serial-number/{serialNumber}": {
            "post": {
                "description": "<p>Associates a license with Cloud Manager either by providing a NetApp License File (NLF) in the license body field
or a value for both the <code>serialNumber</code> query parameter and <code>nssKeyId</code> body field.</p>\n<h3>Note:</h3>\n<ul>\n<li>If you use a Cloud Manager service token, accountId is not a required field</li>\n<li>If you use a user token, accountId is a required field</li>\n<li>If the value of <code>licenseType</code> is <code>EXTRA_CAPACITY</code>, you must provide the associated resource ID (resourceId)</li>\n<li><code>licenseType</code> is not a mandatory field for data services and capacity based license types</li>\n<li><code>expirationDate</code> is a mandatory field unless you are registered with the NetApp Support Site</li>\n<li><code>license</code> is not a mandatory field if values for <code>serialnumber</code> and <code>nssKeyId</code> are provided</li>\n<li><code>capacity</code> is a mandatory field unless you are registered with the NetApp Support Site</li>\n<li><code>packageValue</code> is a mandatory field (used only for internal purposes) unless you are registered with the NetApp Support Site</li>\n<li><code>metadata</code> is not a mandatory field and is used to add additional data to a license that is not included in other request body fields</li>\n</ul>\n <br><b>Token usage:</b> Either a Cloud Manager user token or service token.",
                "tags": [
                    "License"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "accountId": {
                                    "type": "string"
                                },
                                "resourceId": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "licenseType": {
                                    "type": "string"
                                },
                                "expirationDate": {
                                    "type": [
                                        "integer",
                                        "null"
                                    ]
                                },
                                "license": {
                                    "type": "string"
                                },
                                "capacity": {
                                    "type": [
                                        "integer",
                                        "null"
                                    ]
                                },
                                "metadata": {
                                    "type": [
                                        "array",
                                        "null"
                                    ],
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "propertyName": {
                                                "type": "string"
                                            },
                                            "propertyValue": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "propertyName",
                                            "propertyValue"
                                        ]
                                    }
                                },
                                "nssKeyId": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "accountId": "string",
                                "resourceId": "string - assocaited resource identifier e.g. VsaWorkingEnvironment-XXXX",
                                "licenseType": "[ BACKUP | EXTRA_CAPACITY | CAPACITY_BASED | CVO_NODE ] - string",
                                "expirationDate": "integer - UNIX time in milliseconds",
                                "license": "string - license file content - can be fetched from IPA APIs by the serial number",
                                "capacity": "integer - should be in TB",
                                "metadata": [
                                    {
                                        "propertyName": "some property name",
                                        "propertyValue": "value"
                                    },
                                    {
                                        "propertyName": "some property name",
                                        "propertyValue": "value"
                                    }
                                ],
                                "nssKeyId": "string"
                            }
                        }
                    },
                    {
                        "oneOf": [
                            {
                                "type": "string",
                                "pattern": "^[0-9]{1,20}$"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "required": true,
                        "in": "path",
                        "name": "serialNumber"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": ""
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "description": "Success response",
                            "type": "string",
                            "example": "OK"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            },
            "patch": {
                "description": "<p>Updates a specified license by license serial number.
If you use a user token, you must provide the NetApp License File (NLF). If you use the Cloud Manager service token, provide either the NLF or values for <code>serialNumber</code> and the fields that you want to update.</p>\n<h3>Note:</h3>\n<ul>\n<li>If you use a Cloud Manager service token, accountId is not a required field</li>\n<li>If you use a user token, accountId is a required field</li>\n<li>If you provide the NLF, the license data is overwritten by the NLF data</li>\n<li>The <code>metadata</code> field value is appended to the existing metadata</li>\n<li>Only the <code>Authorization</code> field is mandatory</li>\n</ul>\n <br><b>Token usage:</b> Either a Cloud Manager user token or service token.",
                "tags": [
                    "License"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "accountId": {
                                    "type": "string"
                                },
                                "capacity": {
                                    "type": [
                                        "integer",
                                        "null"
                                    ]
                                },
                                "expirationDate": {
                                    "type": [
                                        "integer",
                                        "null"
                                    ]
                                },
                                "license": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "metadata": {
                                    "type": [
                                        "array",
                                        "null"
                                    ],
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "propertyName": {
                                                "type": "string"
                                            },
                                            "propertyValue": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "propertyName",
                                            "propertyValue"
                                        ]
                                    }
                                }
                            },
                            "example": {
                                "accountId": "string",
                                "capacity": "integer - should be in TB",
                                "expirationDate": "integer - UNIX time in milli seconds",
                                "license": "string - license file content",
                                "metadata": [
                                    {
                                        "propertyName": "string",
                                        "propertyValue": "string"
                                    },
                                    {
                                        "propertyName": "string",
                                        "propertyValue": "string"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "oneOf": [
                            {
                                "type": "string",
                                "pattern": "^[0-9]{1,20}$"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "required": true,
                        "in": "path",
                        "name": "serialNumber"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": ""
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "description": "Success response",
                            "type": "string",
                            "example": "OK"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            },
            "delete": {
                "description": "<p>Deletes a license by using a specified serial number.</p>\n<h3>Note:</h3>\n<ul>\n<li>If you use a Cloud Manager service token, accountId is not a required field</li>\n<li>If you use a user token, accountId is a required field</li>\n</ul>\n <br><b>Token usage:</b> Either a Cloud Manager user token or service token.",
                "tags": [
                    "License"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": [
                                "object",
                                "null"
                            ],
                            "properties": {
                                "accountId": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "accountId": "string"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "pattern": "^[0-9]{1,20}$",
                        "required": true,
                        "in": "path",
                        "name": "serialNumber"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": ""
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "description": "Success response",
                            "type": "string",
                            "example": "OK"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            }
        },
        "/license/licenses": {
            "get": {
                "description": "<p>Retrieves a specified licence by type (<code>LicenseType</code>) and/or resource ID (<code>resourceId</code>).</p>\n<p>The license endpoints consult the used or consumed capacity under the<code>includeSummaryInfo</code> parameter
when retrieving the licenses with the <code>GET</code> API call.</p>\n<h3>Note:</h3>\n<ul>\n<li>If you use a Cloud Manager service token, accountId is not a required field</li>\n<li>If you use a user token, accountId is a required field</li>\n<li>When you enter a value in <code>serialNumber</code> , all other fields are ignored</li>\n<li>The boolean parameter <code>includeSummaryInfo</code> (optional) retrieves the <code>totalLicensesCapacity</code>, <code>usedCapacity</code>, <code>reportTime</code> and events such as capacity expired or about to expire for each data service (CLOUD_BACKUP, CLOUD_DATA_SENSE, CLOUD_TIERING).</li>\n</ul>\n <br><b>Token usage:</b> Either a Cloud Manager user token or service token.",
                "tags": [
                    "License"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "accountId"
                    },
                    {
                        "type": [
                            "string",
                            "null"
                        ],
                        "pattern": "^$|[0-9]{1,20}$",
                        "required": false,
                        "in": "query",
                        "name": "serialNumber"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "resourceId"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "licenseType"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "service"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "group"
                    },
                    {
                        "type": "boolean",
                        "required": false,
                        "in": "query",
                        "name": "includeSummaryInfo"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "required": false,
                        "in": "query",
                        "name": "includeExchangedLicenses"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": ""
                },
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "serialNumber": {
                                                "type": "string"
                                            },
                                            "resourceId": {
                                                "type": "string"
                                            },
                                            "licenseType": {
                                                "type": "string"
                                            },
                                            "expirationDate": {
                                                "type": "integer"
                                            },
                                            "license": {
                                                "type": "string"
                                            },
                                            "capacity": {
                                                "type": "integer"
                                            },
                                            "metadata": {
                                                "type": "string"
                                            },
                                            "associatedResourceId": {
                                                "type": "string"
                                            },
                                            "events": {
                                                "any": [
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "endDateEvent": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "licenseExpirationInDays": {
                                                                        "type": "integer"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "capacityEvent": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "usedCapacityAccount": {
                                                                        "type": "number"
                                                                    },
                                                                    "totalLicensesCapacity": {
                                                                        "type": "number"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "null"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "accountId": {
                                                "type": "string"
                                            },
                                            "summaryInfo": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "serviceName": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "licenses": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "serviceName": {
                                                            "type": "string"
                                                        },
                                                        "serialNumber": {
                                                            "type": "string"
                                                        },
                                                        "capacity": {
                                                            "type": "integer"
                                                        },
                                                        "expirationDate": {
                                                            "type": "integer"
                                                        },
                                                        "associatedResourceId": {
                                                            "type": "string"
                                                        },
                                                        "events": {
                                                            "any": [
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "endDateEvent": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string"
                                                                                },
                                                                                "licenseExpirationInDays": {
                                                                                    "type": "integer"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "capacityEvent": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string"
                                                                                },
                                                                                "usedCapacityAccount": {
                                                                                    "type": "number"
                                                                                },
                                                                                "totalLicensesCapacity": {
                                                                                    "type": "number"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "null"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            }
        },
        "/license/account/{accountId}/licenseResource/{resourceIdentifier}": {
            "patch": {
                "description": "<p>Updates a specified license by resource ID.</p>\n<p>As result of the migration process of system licenses (CVO_NODE), duplicate licenses might exist in the license database.
This endpoint consults the associated license serial number to perform the operation. In the case of ambiguity or duplication
of a serial number, you cannot delete the specified license.</p>\n <br><b>Token usage:</b> Cloud Manager service token.",
                "tags": [
                    "License"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "license": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                }
                            },
                            "example": {
                                "license": "string - license file content"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "accountId"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "resourceIdentifier"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": "",
                    "explorer": false
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "description": "Success response",
                            "type": "string",
                            "example": "OK"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            },
            "delete": {
                "description": "<p>Deletes a specified license by resource ID.</p>\n<p>As result of the migration process of system licenses (CVO_NODE), duplicate licenses might exist in the license database.
This endpoint consults the associated license serial number to perform the operation. In the case of ambiguity or duplication
of a serial number, you cannot delete the specified license.</p>\n <br><b>Token usage:</b> Cloud Manager service token.",
                "tags": [
                    "License"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "accountId"
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "resourceIdentifier"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": "",
                    "explorer": false
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "description": "Success response",
                            "type": "string",
                            "example": "OK"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            }
        },
        "/license/associate-resource/serial-number/{serialNumber}": {
            "post": {
                "description": "<p>Associates a resource ID with a specified license. This association is applicable only for a Cloud Volumes ONTAP system with node-based licenses.</p>\n<h3>Note:</h3>\n<ul>\n<li>If you use a Cloud Manager service token, accountId is not a required field</li>\n<li>If you use a user token, accountId is a required field</li>\n<li>If the <code>resourceId</code> is specified in the request payload, the license will be associated with the resource</li>\n<li>If the <code>resourceId</code> is omitted or specified as <code>null</code>, the license will be dissociated from the resource</li>\n</ul>\n <br><b>Token usage:</b> Either a Cloud Manager user token or service token.",
                "tags": [
                    "License"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "accountId": {
                                    "type": "string"
                                },
                                "resourceId": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                }
                            },
                            "example": {
                                "accountId": "string",
                                "resourceId": "string - can be null to remove association"
                            }
                        }
                    },
                    {
                        "oneOf": [
                            {
                                "type": "string",
                                "pattern": "^[0-9]{1,20}$"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "required": true,
                        "in": "path",
                        "name": "serialNumber"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": ""
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "description": "Success response",
                            "type": "string",
                            "example": "OK"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            }
        },
        "/license/exchange": {
            "post": {
                "description": "<p>Exchanges an unused Cloud Volume ONTAP license with a data service license.</p>\n<h3>Note:</h3>\nTo use this endpoint you must be an account administrator.\n <br><b>Token usage:</b> Cloud Manager user token.",
                "tags": [
                    "License"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "accountId": {
                                    "type": "string"
                                },
                                "targetLicenseType": {
                                    "type": "string"
                                },
                                "resourceId": {
                                    "type": "string"
                                },
                                "partnerResourceId": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "accountId",
                                "targetLicenseType",
                                "resourceId"
                            ],
                            "example": {
                                "accountId": "string",
                                "targetLicenseType": "string",
                                "resourceId": "string",
                                "partnerResourceId": "string"
                            }
                        }
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT User Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": ""
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "description": "Success response",
                            "type": "string",
                            "example": "OK"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            }
        },
        "/license/disassociate-resource/{associatedResourceId}": {
            "post": {
                "description": "<p>Dissociates a resource ID from a license. This dissociation is applicable only for a Cloud Volumes ONTAP system with node-based licenses.</p>\n<h3>Note:</h3>\n<ul>\n<li>If you use a Cloud Manager service token, accountId is not a required field</li>\n<li>If you use a user token, accountId is a required field</li>\n</ul>\n <br><b>Token usage:</b> Either a Cloud Manager user token or service token.",
                "tags": [
                    "License"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "accountId": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "accountId": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        }
                    },
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "associatedResourceId"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": ""
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "description": "Success response",
                            "type": "string",
                            "example": "OK"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            }
        },
        "/license/account/{accountId}/subscriptions/{subscriptionId}": {
            "post": {
                "description": "<p>Registers a subscription in the Digital Wallet service and associates it with the account by using the Tenancy service.
Each subscription can be associated with multiple accounts.</p>\n<h3>Note:</h3>\nThis endpoint updates the expiration date based on the date provided in the request.\n <br> <br><b>Token usage:</b> Cloud Manager service token.",
                "tags": [
                    "Subscription"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "subscriptionType": {
                                    "type": "string"
                                },
                                "expirationDate": {
                                    "type": "integer"
                                },
                                "dwAudit": {
                                    "type": "boolean",
                                    "description": "<p>The Digital Wallet service audits, by default, all API calls.</p>\n<h3>Note:</h3>\n- To stop the Digital Wallet service from auditing a request, you can set the calling service to `false` \n- `dwAudit` is an optional parameter, the default value is `true`\n",
                                    "default": true
                                }
                            },
                            "required": [
                                "subscriptionType",
                                "expirationDate"
                            ],
                            "example": {
                                "subscriptionType": "string",
                                "expirationDate": "defined as UNIX time in milliseconds",
                                "dwAudit": "false/true"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "minLength": 9,
                        "required": true,
                        "in": "path",
                        "name": "accountId"
                    },
                    {
                        "type": "string",
                        "minLength": 1,
                        "required": true,
                        "in": "path",
                        "name": "subscriptionId"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": "",
                    "explorer": false
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "description": "Success response",
                            "type": "string",
                            "example": "OK"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            }
        },
        "/license/account/{accountId}/subscriptions": {
            "get": {
                "description": "<p>Retrieves the subscription information of a specified subscription.</p>\n<h3>Note:</h3>\n<ul>\n<li>In the context of an account provided in URL parameters, the API returns subscriptions of all accounts</li>\n<li>If the subscription ID is provided, the API returns only the subscription details or an empty response</li>\n<li>The API authorizes three types of calls: user call, agent call (Connector/Cloud Manager), and service call (with a predefined scope)</li>\n<li>For a service call, you must send the subscription type as a query parameter (the API validates the scope against the subscription type)</li>\n</ul>\n <br><b>Token usage:</b> Cloud Manager service token.",
                "tags": [
                    "Subscription"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "subscriptionId"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "subscriptionType"
                    },
                    {
                        "type": "string",
                        "minLength": 9,
                        "required": true,
                        "in": "path",
                        "name": "accountId"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": "",
                    "explorer": false
                },
                "responses": {
                    "200": {
                        "description": "Default Response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "subscriptions": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subscriptionId": {
                                                "type": "string"
                                            },
                                            "subscriptionType": {
                                                "type": "string"
                                            },
                                            "expirationDate": {
                                                "type": "integer"
                                            },
                                            "numberOfAssociatedCvos": {
                                                "type": "integer",
                                                "default": 0
                                            },
                                            "lastModified": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            }
        },
        "/license/subscriptions/{subscriptionId}": {
            "patch": {
                "description": "<p>Updates a subscription expiration date by using a specified subscription ID.</p>\n<h3>Note:</h3>\nThis endpoint updates the expiration date based on the date provided in the request.\n <br> <br><b>Token usage:</b> Cloud Manager service token.",
                "tags": [
                    "Subscription"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "subscriptionType": {
                                    "type": "string"
                                },
                                "expirationDate": {
                                    "type": "integer"
                                },
                                "dwAudit": {
                                    "type": "boolean",
                                    "description": "<p>The Digital Wallet service audits, by default, all API calls.</p>\n<h3>Note:</h3>\n- To stop the Digital Wallet service from auditing a request, you can set the calling service to `false` \n- `dwAudit` is an optional parameter, the default value is `true`\n",
                                    "default": true
                                }
                            },
                            "required": [
                                "subscriptionType",
                                "expirationDate"
                            ],
                            "example": {
                                "subscriptionType": "string",
                                "expirationDate": "defined as UNIX time in milliseconds",
                                "dwAudit": "false/true"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "minLength": 1,
                        "required": true,
                        "in": "path",
                        "name": "subscriptionId"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": "",
                    "explorer": false
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "description": "Success response",
                            "type": "string",
                            "example": "OK"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            }
        },
        "/license/account/{accountId}/subscription/{subscriptionId}": {
            "delete": {
                "description": "<p>Deletes or dissociates a subscription containing a specified subscription ID from an account.</p>\n<p>The specified subscription must exist and not be associated with a Cloud Volumes ONTAP instance.
It deletes the subscription if no other account is associated with the subscription.
If more than one account is associated with the subscription, this endpoint disassociates the account provided in <code>accountId</code> and the subscription.</p>\n <br><b>Token usage:</b> Cloud Manager service token.",
                "tags": [
                    "Subscription"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "<p>The Digital Wallet service audits, by default, all API calls.</p>\n<h3>Note:</h3>\n- To stop the Digital Wallet service from auditing a request, you can set the calling service to `false` \n- `dwAudit` is an optional parameter, the default value is `true`\n",
                        "default": true,
                        "required": false,
                        "in": "query",
                        "name": "dwAudit"
                    },
                    {
                        "type": "string",
                        "minLength": 9,
                        "required": true,
                        "in": "path",
                        "name": "accountId"
                    },
                    {
                        "type": "string",
                        "minLength": 1,
                        "required": true,
                        "in": "path",
                        "name": "subscriptionId"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": "",
                    "explorer": false
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "description": "Success response",
                            "type": "string",
                            "example": "OK"
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            }
        },
        "/license/onPrem/account/{accountId}/clusters": {
            "get": {
                "description": "<p>Retrieves on-premises (on-prem) ONTAP cluster data.
The ONTAP cluster must be configured for AutoSupport to send back the telemetry and configuration data to NetApp.</p>\n<p>Data retrieved by this endpoint is comprised mostly of ONTAP cluster configuration details
(such as cluster management IP address, capacity, contract date, feature licenses, and more).</p>\n <br><b>Token usage:</b> Cloud Manager user token.",
                "tags": [
                    "Data Services"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "name": "accountId"
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "required": true,
                        "description": "Authorization JWT Service Token",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "X-Service-Request-Id",
                        "required": false,
                        "description": "Request identifier",
                        "type": "string"
                    }
                ],
                "x-doc": {
                    "title": "",
                    "category": "",
                    "filename": ""
                },
                "responses": {
                    "200": {
                        "description": "Account onPremise data",
                        "schema": {
                            "description": "Account onPremise data",
                            "type": "object",
                            "properties": {
                                "partialResponse": {
                                    "type": "boolean"
                                },
                                "clusterData": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "hostName": {
                                                "type": "string"
                                            },
                                            "serialNumber": {
                                                "type": "string"
                                            },
                                            "hardwareContractEndDate": {
                                                "type": "string"
                                            },
                                            "softwareContractEndDate": {
                                                "type": "string"
                                            },
                                            "serviceTier": {
                                                "type": "string"
                                            },
                                            "clusterIp": {
                                                "type": "string"
                                            },
                                            "clusterName": {
                                                "type": "string"
                                            },
                                            "clusterId": {
                                                "type": "string"
                                            },
                                            "usedCapacity": {
                                                "type": "integer"
                                            },
                                            "allocatedCapacity": {
                                                "type": "integer"
                                            },
                                            "discovered": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/def-2",
                            "description": "Error response"
                        }
                    }
                }
            }
        }
    },
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Authorization_Token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "name": "License",
            "description": "<details>\n<summary>Overview</summary>\n<fieldset>\nThe license endpoints manage the licenses for end users. \nThis includes monitoring the expiration and capacity usage of end-user licenses.\n<p>A license is a collection of the following information:</p>\n<ul>\n<li>License serial number (such as 481000495)</li>\n<li>Resource identifier (such as license-481000495-6897991f-f83f-41c1-b151-eb62073e57be), used internally</li>\n<li>License type (such as BACKUP)</li>\n<li>Permitted capacity</li>\n<li>Expiration date</li>\n</ul>\n<p>You can perform the following actions with the license endpoints:</p>\n<ul>\n<li>Create, update, or delete a license based on the serial number</li>\n</ul>\n</fieldset>\n</details>\n"
        },
        {
            "name": "Subscription",
            "description": "<details>\n<summary>Overview</summary>\n<fieldset>\nThe subscription endpoints manage subscriptions for Cloud Manager services for end users. \nThe endpoints register a specified subscription on the Digital Wallet service and associate it with the Tenancy service. \n<p>A subscription for Cloud Manager services is a collection of the following:</p>\n<ul>\n<li>Subscription ID (such as 666777, A-S000003969)</li>\n<li>Subcription type (such as Keystone)</li>\n<li>Expiration date (such as 20251109)</li>\n<li>Last modified (such as 2021-11-09 00:00:00)</li>\n<li>Resource identifier (such as license-481000495-6897991f-f83f-41c1-b151-eb62073e57be), used internally</li>\n</ul>\n<p>The subscription endpoints support the Create-Read-Update-Delete (CRUD) operation on the <code>subscription</code> and <code>subscription_resource</code> tables
based on the subscription ID.</p>\n<p>Each license or subscription that is managed by the Digital Wallet service has a resource identifier in the Tenancy service that associates it with an account.</p>\n<p>You can perform the following actions with the subscription endpoints:</p>\n<ul>\n<li>Read, create, update, or delete a subscription</li>\n</ul>\n</fieldset>\n</details>\n"
        }
    ],
    "externalDocs": {
        "url": "https://docs.netapp.com/us-en/cloud-manager-automation/cm/introduction.html",
        "description": "Learn more about the Cloud Manager platform REST APIs."
    }
}
